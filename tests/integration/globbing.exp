#!/usr/bin/expect -f

# Test script for globbing functionality
# Run with: expect test_globbing.exp

set timeout 10

# Start the shell
spawn ./build/shell

# Test 1: ls *.cpp should expand to matching files
expect "$ "
send "ls src/*.cpp\r"
expect {
    "src/command_parser.cpp" { 
        expect "src/command_table.cpp" {
            expect "src/completion.cpp" {
                puts "✓ Test 1 passed: *.cpp glob expansion works"
            }
        }
    }
    timeout { puts "✗ Test 1 failed: *.cpp glob expansion timeout"; exit 1 }
}

# Test 2: rm file?.txt (non-existent) should preserve literal
expect "$ "
send "echo 'rm file?.txt would run:' && echo file?.txt\r"
expect {
    "file?.txt" { puts "✓ Test 2 passed: ? glob with no matches preserved literal" }
    timeout { puts "✗ Test 2 failed: ? glob test timeout"; exit 1 }
}

# Test 3: Test multiple patterns in one command
expect "$ "
send "echo 'Files:' src/*.h src/*.cpp | head -1\r"
expect {
    "Files: src/command_parser.h" {
        puts "✓ Test 3 passed: Multiple glob patterns in one command work"
    }
    timeout { puts "✗ Test 3 failed: Multiple glob patterns timeout"; exit 1 }
}

# Test 4: Test hidden files
expect "$ "
send "ls .* | head -3\r"
expect {
    ".clang-format" { puts "✓ Test 4 passed: Hidden file globbing works" }
    timeout { puts "✗ Test 4 failed: Hidden file globbing timeout"; exit 1 }
}

# Exit shell
expect "$ "
send "exit\r"
expect eof

puts "\n✓ All globbing tests passed!"
